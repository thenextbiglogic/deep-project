function PrepareRouteList(e){utils.Logger.info("Preparing Route List");var t=utils.Constants.AppRegex.Controller;t=t.replace("{0}",e),routeList.push({name:e,controller:t,actions:{get:function(e,r,o){var i=require(t);utils.Logger.message(t),console.log(Object.keys(i)),utils.Logger.message("Calling controller:"+i.name),i.Get(e,r,o)},post:function(e,t){return route.post(e,t)}},LastAccessed:(new Date).getTime()})}const utils={Logger:require("../js/app-log.util.min"),Constants:require("../js/app-contants.util.min"),Exception:require("../js/app-exception.util.min"),_:require("lodash")};var router,routeList=[],route={configure:function(){utils.Logger.info("Configuring routes"),PrepareRouteList("home"),PrepareRouteList("node"),PrepareRouteList("error")},add:function(e){return PrepareRouteList(e),routeList},get:function(e){return utils._.find(routeList,t=>{if(t.name===e)return utils.Logger.message("Name:"+t.name),t})}};module.exports=route;