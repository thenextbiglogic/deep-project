function PrepareRouteList(e){utils.Logger.info("Preparing Route List"),controllerPath=controllerPath.replace("{0}",e);var t=require(controllerPath);routeList.push({name:e,controller:controllerPath,actions:{get:function(e,o,r){utils.Logger.message(controllerPath),console.log(Object.keys(t)),utils.Logger.message("Calling controller:"+t.name),t.Get(e,o,r)},post:function(e,t){return route.post(e,t)}},LastAccessed:(new Date).getTime()})}const utils={Logger:require("../js/app-log.util.min"),Constants:require("../js/app-contants.util.min"),Exception:require("../js/app-exception.util.min"),_:require("lodash")};var router,routeList=[],controllerPath=utils.Constants.AppRegex.Controller,route={configure:function(){utils.Logger.info("Configuring routes"),PrepareRouteList("home")},add:function(e){return PrepareRouteList(e),routeList},get:function(e){return utils._.find(routeList,t=>t.name===e)}};module.exports=route;